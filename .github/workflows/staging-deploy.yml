name: Deploy Brezel.ai API to Staging

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [ closed ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Download dependencies
      run: |
        go mod download
        go mod verify

    - name: Run tests
      run: |
        go test -v -race ./...

    - name: Build application
      run: |
        go build -o brezel-api .

  build-and-deploy:
    name: Build and Deploy to Staging
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: staging
      url: https://staging.brezel.ai

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Deploy to staging server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USER }}
        key: ${{ secrets.STAGING_SSH_KEY }}
        script: |
          cd /opt/brezel
          
          # Login to GitHub Container Registry
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Set environment variables
          export DB_PASSWORD="${{ secrets.STAGING_DB_PASSWORD }}"
          
          # Pull latest image
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging
          
          # Stop existing container
          docker stop brezel-staging-api || true
          docker rm brezel-staging-api || true
          
          # Run new container
          docker run -d \
            --name brezel-staging-api \
            --restart unless-stopped \
            -p 8080:8080 \
            -e WEB_ADDR=:8080 \
            -e APP_ENV=staging \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging
          
          # Wait for health check
          sleep 30
          curl -f http://localhost:8080/health || exit 1
          
          echo "✅ Brezel.ai API deployed successfully to staging"

    - name: Run smoke tests
      run: |
        sleep 10
        curl -f https://staging.brezel.ai/health
        curl -f https://staging.brezel.ai/api/v1/status
        echo "✅ Smoke tests passed" 